<!-- build_compile.xmlDescription:	This ANT script publishes installers and build artifacts to s:/build.		To use this script, you must update properties is <project root>/scripts/build.properties or overide 	them from commandline (using -D option). For example:				set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%		ant -XX:MaxPermSize=512m -Dnlbuildroot=C:/depot/PolicyStudio/dev/BuildScript_1205 -Dexternal.dir=c:/depot/external -Dnlexternaldir=c:/depot/external -Dbuild_number=10001 -f scripts/build_publish.xml			or				set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%		set ANT_OPTS=-XX:MaxPermSize=512m -Dnlbuildroot=%NLBUILDROOT% -Dexternal.dir=%NLEXTERNALDIR% -Dnlexternaldir=%NLEXTERNALDIR% -Dbuild_number=10001 		ant -f scripts/build_publish.xml -v	--><project name="build_compile" default="all" basedir=".">	<!-- Propery files -->	<property file="${basedir}/build.properties" />	<property environment="env" />		<!-- Global properties -->	<property name="build_dir" location="${nlbuildroot}/build" />	<property name="classes_dir" value="${build_dir}/classes" />	<property name="package_dir" value="${build_dir}/${package_name}" />	<property name="dist_zip_file_name" value="${package_name}-${version_str}-${version_build_short}-${build_date_long}.zip" />		<!-- Dump properties -->	<echoproperties />		<echo message="INFO: Dump properties completed" />		<!-- Sanity checks -->	<fail message="nlbuildroot is not set" unless="nlbuildroot" />	<fail message="nlbuildroot is empty">		<condition>			<equals arg1="${nlbuildroot}" arg2="" trim="true" />		</condition>	</fail>	<available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists" />	<fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists" />		<echo message="INFO: Sanity check completed (no error)" />		<!-- Global tasks -->	<tstamp>		<format property="local.now" pattern="EEE, d MMM yyyy HH:mm:ss Z" />	</tstamp>		<echo message="version_str = ${version_str}" />	<echo message="time = ${local.now}" />		<!-- Targets -->	<target name="all" description="Default for all" depends="clean, compile, package" />		<target name="clean" description="Delete all build artifacts" depends="">		<delete includeemptydirs="true" dir="${build_dir}" />	</target>		<target name="compile" description="Compile the project" depends="clean">		<mkdir dir="${classes_dir}" />		<mkdir dir="${package_dir}" />				<javac srcdir="${nlbuildroot}/src" destdir="${classes_dir}">			<include name="**/*.java" />			<!--exclude name="**/Test*.java" /-->		</javac>				  <jar destfile="${build_dir}/txttoldif.jar" basedir="${classes_dir}">			<manifest>				<attribute name="Java-Version" value="${java.version}"/>				<attribute name="Implementation-Vendor" value="NextLabs, Inc."/>				<attribute name="Implementation-Title" value="${product_name}"/>				<attribute name="Implementation-Version" value="${version_str} (${build_number})"/>				<attribute name="Implementation-Time" value="${local.now}"/>				<attribute name="Main-Class" value="com.nextlabs.ldif.ConvertTOLdif"/>			</manifest>		</jar>		</target>		<target name="package" description="builds each plugin module">				<mkdir dir="${package_dir}/tool" />		<mkdir dir="${package_dir}/docs" />				<copy todir="${package_dir}/tool" overwrite="true">			<fileset file="${build_dir}/*.jar" />		</copy>		<copy todir="${package_dir}/docs" overwrite="true">					<fileset file="${nlbuildroot}/docs/*.*" />		</copy>						<zip destfile="${build_dir}/${dist_zip_file_name}" encoding="UTF-8">			<fileset dir="${build_dir}">				<include name="${package_name}/**" />			</fileset>		</zip>	</target></project>